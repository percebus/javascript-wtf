<testsuite name="Testem Tests" tests="102" skipped="0" failures="0" timestamp="Sun Feb 13 2022 11:42:09 GMT-0600 (Central Standard Time)" time="4.838"><testcase classname="Chrome 98.0" name="Number left associativity 1 &lt; 2 &lt; 3 is true" time="0"/><testcase classname="Chrome 98.0" name="Number left associativity 3 > 2 > 1 is false!" time="0"/><testcase classname="Chrome 98.0" name="Number parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Chrome 98.0" name="Number parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Chrome 98.0" name="Number parseInt('bananas') NaN is true" time="0"/><testcase classname="Chrome 98.0" name="Number parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Chrome 98.0" name="Number parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Chrome 98.0" name="Number _.parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Chrome 98.0" name="Number _.parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Chrome 98.0" name="Number _.parseInt('bananas') NaN is true" time="0"/><testcase classname="Chrome 98.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Chrome 98.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string -0 Number('-0') is -0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string -0 Number('-0') does not equal 0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string -0 JSON.parse('-0) is -0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string -0 - 0 is -0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string -0 - 0 Number('- 0') returns NaN" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string whitespace 0 Number('0') returns 0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string whitespace 0 Number('') returns 0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string whitespace 0 Number(' ') returns 0" time="0"/><testcase classname="Chrome 98.0" name="Number parse from string whitespace 0 Number('
	') returns 0" time="0"/><testcase classname="Chrome 98.0" name="Number .toFixed(x) 42.toFixed(2) variable parses" time="0"/><testcase classname="Chrome 98.0" name="Number .toFixed(x) 42.toFixed(2) 42 .toFixed(2) returns '42.00'" time="0"/><testcase classname="Chrome 98.0" name="Number .toFixed(x) 42.toFixed(2) 42.0.toFixed(2) returns '42.00'" time="0"/><testcase classname="Chrome 98.0" name="Number .toFixed(x) 42.toFixed(2) 42..toFixed(2) returns '42.00'" time="0"/><testcase classname="Chrome 98.0" name="Number MAX_VALUE is > 0" time="0"/><testcase classname="Chrome 98.0" name="Number MIN_VALUE is close to 0" time="0"/><testcase classname="Chrome 98.0" name="Number -0 is -0" time="0"/><testcase classname="Chrome 98.0" name="Number -0 equals -0" time="0"/><testcase classname="Chrome 98.0" name="Number -0 does not equal 0" time="0"/><testcase classname="Chrome 98.0" name="Object coercion [] !== [] is true" time="0"/><testcase classname="Chrome 98.0" name="Object coercion [] + {} equals '[object Object]'" time="0"/><testcase classname="Chrome 98.0" name="Object coercion {} + [] is 0" time="0"/><testcase classname="Chrome 98.0" name="Object coercion {} + [] is '[object Object]'" time="0"/><testcase classname="Firefox 96.0" name="Number left associativity 1 &lt; 2 &lt; 3 is true" time="0"/><testcase classname="Firefox 96.0" name="Number left associativity 3 > 2 > 1 is false!" time="0"/><testcase classname="Firefox 96.0" name="Number parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Firefox 96.0" name="Number parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Firefox 96.0" name="Number parseInt('bananas') NaN is true" time="0"/><testcase classname="Firefox 96.0" name="Number parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Firefox 96.0" name="Number parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Firefox 96.0" name="Number _.parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Firefox 96.0" name="Number _.parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Firefox 96.0" name="Number _.parseInt('bananas') NaN is true" time="0"/><testcase classname="Firefox 96.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Firefox 96.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string -0 Number('-0') is -0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string -0 Number('-0') does not equal 0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string -0 JSON.parse('-0) is -0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string -0 - 0 is -0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string -0 - 0 Number('- 0') returns NaN" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string whitespace 0 Number('0') returns 0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string whitespace 0 Number('') returns 0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string whitespace 0 Number(' ') returns 0" time="0"/><testcase classname="Firefox 96.0" name="Number parse from string whitespace 0 Number('
	') returns 0" time="0"/><testcase classname="Firefox 96.0" name="Number .toFixed(x) 42.toFixed(2) variable parses" time="0"/><testcase classname="Firefox 96.0" name="Number .toFixed(x) 42.toFixed(2) 42 .toFixed(2) returns '42.00'" time="0"/><testcase classname="Firefox 96.0" name="Number .toFixed(x) 42.toFixed(2) 42.0.toFixed(2) returns '42.00'" time="0"/><testcase classname="Firefox 96.0" name="Number .toFixed(x) 42.toFixed(2) 42..toFixed(2) returns '42.00'" time="0"/><testcase classname="Firefox 96.0" name="Number MAX_VALUE is > 0" time="0"/><testcase classname="Firefox 96.0" name="Number MIN_VALUE is close to 0" time="0"/><testcase classname="Firefox 96.0" name="Number -0 is -0" time="0"/><testcase classname="Firefox 96.0" name="Number -0 equals -0" time="0"/><testcase classname="Firefox 96.0" name="Number -0 does not equal 0" time="0"/><testcase classname="Firefox 96.0" name="Object coercion [] !== [] is true" time="0"/><testcase classname="Firefox 96.0" name="Object coercion [] + {} equals '[object Object]'" time="0"/><testcase classname="Firefox 96.0" name="Object coercion {} + [] is 0" time="0"/><testcase classname="Firefox 96.0" name="Object coercion {} + [] is '[object Object]'" time="0"/><testcase classname="Safari 13.0" name="Number left associativity 1 &lt; 2 &lt; 3 is true" time="0"/><testcase classname="Safari 13.0" name="Number left associativity 3 > 2 > 1 is false!" time="0"/><testcase classname="Safari 13.0" name="Number parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Safari 13.0" name="Number parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Safari 13.0" name="Number parseInt('bananas') NaN is true" time="0"/><testcase classname="Safari 13.0" name="Number parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Safari 13.0" name="Number parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Safari 13.0" name="Number _.parseInt('bananas') _.isNumber is true" time="0"/><testcase classname="Safari 13.0" name="Number _.parseInt('bananas') typeof is 'number'" time="0"/><testcase classname="Safari 13.0" name="Number _.parseInt('bananas') NaN is true" time="0"/><testcase classname="Safari 13.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas === bananas is false" time="0"/><testcase classname="Safari 13.0" name="Number _.parseInt('bananas') NaN reflectiveness bananas == bananas is false" time="0"/><testcase classname="Safari 13.0" name="Number parse from string -0 Number('-0') is -0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string -0 Number('-0') does not equal 0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string -0 JSON.parse('-0) is -0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string -0 - 0 is -0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string -0 - 0 Number('- 0') returns NaN" time="0"/><testcase classname="Safari 13.0" name="Number parse from string whitespace 0 Number('0') returns 0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string whitespace 0 Number('') returns 0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string whitespace 0 Number(' ') returns 0" time="0"/><testcase classname="Safari 13.0" name="Number parse from string whitespace 0 Number('
	') returns 0" time="0"/><testcase classname="Safari 13.0" name="Number .toFixed(x) 42.toFixed(2) variable parses" time="0"/><testcase classname="Safari 13.0" name="Number .toFixed(x) 42.toFixed(2) 42 .toFixed(2) returns '42.00'" time="0"/><testcase classname="Safari 13.0" name="Number .toFixed(x) 42.toFixed(2) 42.0.toFixed(2) returns '42.00'" time="0"/><testcase classname="Safari 13.0" name="Number .toFixed(x) 42.toFixed(2) 42..toFixed(2) returns '42.00'" time="0"/><testcase classname="Safari 13.0" name="Number MAX_VALUE is > 0" time="0"/><testcase classname="Safari 13.0" name="Number MIN_VALUE is close to 0" time="0"/><testcase classname="Safari 13.0" name="Number -0 is -0" time="0"/><testcase classname="Safari 13.0" name="Number -0 equals -0" time="0"/><testcase classname="Safari 13.0" name="Number -0 does not equal 0" time="0"/><testcase classname="Safari 13.0" name="Object coercion [] !== [] is true" time="0"/><testcase classname="Safari 13.0" name="Object coercion [] + {} equals '[object Object]'" time="0"/><testcase classname="Safari 13.0" name="Object coercion {} + [] is 0" time="0"/><testcase classname="Safari 13.0" name="Object coercion {} + [] is '[object Object]'" time="0"/></testsuite>
